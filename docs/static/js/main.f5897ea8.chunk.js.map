{"version":3,"sources":["components/FilterInput/index.js","components/FiltersList/index.js","services/RandomBordersRadius.js","components/PokeCard/index.js","components/PokeList/index.js","components/HomePage/index.js","components/PokemonDetailPage/index.js","services/API-call.js","components/App/index.js","index.js"],"names":["FilterInput","props","type","placeholder","handlerInputName","nameValue","react_default","a","createElement","className","htmlFor","onChange","value","FiltersList","components_FilterInput","getRandomArbitrary","min","max","Math","random","borderRadiusSintaxis","b","concat","PokeCard","id","name","sprites","types","pokemonLength","evolvesFrom","react_router_dom","to","title","style","borderRadius","src","front_default","alt","map","index","key","PokeList","pokemonsData","isFetching","Spinner","animation","variant","role","filter","pokemon","toUpperCase","includes","CSSTransition","in","appear","timeout","classNames","components_PokeCard","length","HomePage","components_FiltersList","components_PokeList","PokemonDetail","match","myPokemon","parseInt","params","pokemonId","getPokemon","selectedPkmId","find","item","back_default","index_es","icon","faRulerVertical","size","color","height","faWeight","weight","faDice","abilities","ability","faAngleDoubleLeft","URL","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","filters","bind","assertThisInitialized","_this2","fetch","then","response","json","pokePromisesArr","results","pokeURL","thisPokemonInfo","url","pokeId","pokeHasEvolution","evolves_from_species","objectSpread","Promise","all","responses","setState","sort","e","currentTarget","prevState","_this3","_this$state$data","react_router","exact","path","render","components_HomePage","routerProps","PokemonDetailPage","React","Component","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f5897ea8.chunk.js","sourcesContent":["import React from 'react';\n\nimport './styles.scss';\n\nconst FilterInput = props => {\n\tconst { type, placeholder, handlerInputName, nameValue } = props;\n\treturn (\n\t\t<div>\n\t\t\t<label className=\"visually-hidden\" htmlFor=\"name\">\n\t\t\t\tFilter by name\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\ttype={type}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tonChange={handlerInputName}\n\t\t\t\tvalue={nameValue}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default FilterInput;\n","import React from 'react';\n\nimport './styles.scss';\nimport FilterInput from '../FilterInput';\n\nconst FiltersList = props => {\n\tconst { handlerInputName, nameValue } = props;\n\treturn (\n\t\t<section>\n\t\t\t<FilterInput\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Pokemon name\"\n\t\t\t\thandlerInputName={handlerInputName}\n\t\t\t\tnameValue={nameValue}\n\t\t\t/>\n\t\t</section>\n\t);\n};\n\nexport default FiltersList;\n","function getRandomArbitrary(min, max) {\n\treturn Math.random() * (max - min) + min;\n}\n\nfunction borderRadiusSintaxis(a, b) {\n\tconst sintaxis = `${getRandomArbitrary(a, b)}% ${getRandomArbitrary(\n\t\ta,\n\t\tb\n\t)}% ${getRandomArbitrary(a, b)}% ${getRandomArbitrary(\n\t\ta,\n\t\tb\n\t)}% / ${getRandomArbitrary(a, b)}% ${getRandomArbitrary(\n\t\ta,\n\t\tb\n\t)}% ${getRandomArbitrary(a, b)}% ${getRandomArbitrary(a, b)}% `;\n\treturn sintaxis;\n}\n\nexport { borderRadiusSintaxis };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { borderRadiusSintaxis } from '../../services/RandomBordersRadius';\n\nimport './styles.scss';\n\nconst PokeCard = props => {\n\tconst { id, name, sprites, types, pokemonLength, evolvesFrom } = props;\n\treturn (\n\t\t<Link to={`/pokemon-detail/${id}`} title=\"Get more info about this Pokemon\">\n\t\t\t<article\n\t\t\t\tclassName=\"pokemon-card\"\n\t\t\t\tstyle={{\n\t\t\t\t\tborderRadius: borderRadiusSintaxis(20, 80)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<img src={sprites.front_default} alt={name} />\n\n\t\t\t\t<h2 className=\"pokemon-title\">{name}</h2>\n\t\t\t\t<p>\n\t\t\t\t\tID {id}/{pokemonLength}\n\t\t\t\t</p>\n\t\t\t\t{evolvesFrom ? <p>evolves from...{evolvesFrom}</p> : <p />}\n\t\t\t\t<ul>\n\t\t\t\t\t{types.map((type, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tclassName=\"pokemon-type__item\"\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tborderRadius: borderRadiusSintaxis(20, 80)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{type.type.name}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</article>\n\t\t</Link>\n\t);\n};\n\nexport default PokeCard;\n","import React from 'react';\nimport PokeCard from '../PokeCard';\nimport { Spinner } from 'react-bootstrap';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './styles.scss';\n\nconst PokeList = props => {\n\tconst { pokemonsData, isFetching, nameValue } = props;\n\treturn (\n\t\t<div>\n\t\t\t{isFetching ? (\n\t\t\t\t<main>\n\t\t\t\t\t<Spinner animation=\"border\" variant=\"danger\" role=\"status\">\n\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t\t</Spinner>\n\t\t\t\t\t<Spinner animation=\"border\" variant=\"info\" role=\"status\">\n\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t\t</Spinner>\n\t\t\t\t\t<Spinner animation=\"border\" variant=\"warning\" role=\"status\">\n\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t\t</Spinner>\n\t\t\t\t</main>\n\t\t\t) : (\n\t\t\t\t<main>\n\t\t\t\t\t<ul className=\"pokeList\">\n\t\t\t\t\t\t{pokemonsData\n\t\t\t\t\t\t\t.filter(pokemon => {\n\t\t\t\t\t\t\t\treturn nameValue\n\t\t\t\t\t\t\t\t\t? pokemon.name.toUpperCase().includes(nameValue.toUpperCase())\n\t\t\t\t\t\t\t\t\t: true;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.map(pokemon => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<CSSTransition\n\t\t\t\t\t\t\t\t\t\tin={true}\n\t\t\t\t\t\t\t\t\t\tappear={true}\n\t\t\t\t\t\t\t\t\t\ttimeout={1000}\n\t\t\t\t\t\t\t\t\t\tclassNames=\"pokeCards-transition\"\n\t\t\t\t\t\t\t\t\t\tkey={pokemon.id}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t<PokeCard\n\t\t\t\t\t\t\t\t\t\t\t\tid={pokemon.id}\n\t\t\t\t\t\t\t\t\t\t\t\tname={pokemon.name}\n\t\t\t\t\t\t\t\t\t\t\t\tsprites={pokemon.sprites}\n\t\t\t\t\t\t\t\t\t\t\t\ttypes={pokemon.types}\n\t\t\t\t\t\t\t\t\t\t\t\tevolvesFrom={pokemon.evolvesFrom}\n\t\t\t\t\t\t\t\t\t\t\t\tpokemonLength={pokemonsData.length}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</CSSTransition>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</main>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default PokeList;\n","import React from 'react';\nimport FiltersList from '../FiltersList';\nimport PokeList from '../PokeList';\n\nimport './styles.scss';\n\nconst HomePage = props => {\n\tconst { pokemonsData, isFetching, handlerInputName, nameValue } = props;\n\treturn (\n\t\t<div className=\"pokeApp\">\n\t\t\t<h1>Pokedesk</h1>\n\t\t\t<FiltersList handlerInputName={handlerInputName} nameValue={nameValue} />\n\t\t\t<PokeList\n\t\t\t\tisFetching={isFetching}\n\t\t\t\tpokemonsData={pokemonsData}\n\t\t\t\tnameValue={nameValue}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaWeight,\n\tfaRulerVertical,\n\tfaAngleDoubleLeft,\n\tfaDice\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { CSSTransition } from 'react-transition-group';\nimport './styles.scss';\n\nconst PokemonDetail = props => {\n\tconst { isFetching, match, pokemonsData } = props;\n\tconst myPokemon = parseInt(match.params.pokemonId);\n\n\tfunction getPokemon(selectedPkmId) {\n\t\treturn pokemonsData.find(item => item.id === selectedPkmId);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{isFetching ? (\n\t\t\t\t<p>cargando</p>\n\t\t\t) : (\n\t\t\t\t<CSSTransition\n\t\t\t\t\tin={true}\n\t\t\t\t\tappear={true}\n\t\t\t\t\ttimeout={1000}\n\t\t\t\t\tclassNames=\"detailPage-transition\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"detailPage\">\n\t\t\t\t\t\t<h2>{getPokemon(myPokemon).name} details</h2>\n\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={getPokemon(myPokemon).sprites.front_default}\n\t\t\t\t\t\t\talt={getPokemon(myPokemon).name}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={getPokemon(myPokemon).sprites.back_default}\n\t\t\t\t\t\t\talt={getPokemon(myPokemon).name}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{/* All images available*/}\n\t\t\t\t\t\t{/* <ul>\n\t\t\t\t\t\t{Object.entries(getPokemon(myPokemon).sprites).map(item => {\n\t\t\t\t\t\t\tconsole.log(item[0], item[1]);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{item[0]&&item[1]}\n\t\t\t\t\t\t\t\t<img src={item[1]} alt=\"\" />\n\t\t\t\t\t\t\t\t<small>{item[0]}</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul> */}\n\t\t\t\t\t\t<h3>Height</h3>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faRulerVertical} size=\"2x\" color=\"white\" />\n\t\t\t\t\t\t<p>{getPokemon(myPokemon).height} </p>\n\n\t\t\t\t\t\t<h3>Weight</h3>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWeight} size=\"2x\" color=\"white\" />\n\t\t\t\t\t\t{/* <FontAwesomeIcon icon={faWeight} /> */}\n\t\t\t\t\t\t<p>{getPokemon(myPokemon).weight} </p>\n\n\t\t\t\t\t\t<h3>Abilities</h3>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faDice} size=\"2x\" color=\"white\" />\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{getPokemon(myPokemon).abilities.map((item, index) => {\n\t\t\t\t\t\t\t\treturn <li key={index}>{item.ability.name}</li>;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t<Link to=\"/\" title=\"Back to Pokedesk\">\n\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\ticon={faAngleDoubleLeft}\n\t\t\t\t\t\t\t\tsize=\"2x\"\n\t\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<p>HOME</p>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</CSSTransition>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default PokemonDetail;\n","//Real Pokemon API URL\nconst baseUrl = 'https://pokeapi.co/api/v2/';\nconst endpoint = 'pokemon';\nconst parameter = '?limit=25';\nconst URL = `${baseUrl}${endpoint}${parameter}`;\n\n// Copy of the data returned by Pokemon Api\n// const URL = 'http://pokeapi.salestock.net/api/v2/pokemon/';\n\n//First fetch\nconst fetchPokeList = () => {\n\treturn fetch(URL).then(response => response.json());\n};\n\n//Second fetch\nconst fetchPokeDetail = pokeURL => {\n\treturn fetch(pokeURL).then(response => response.json());\n};\n\n//Third fetch\nconst pokeSpeciesURL = 'https://pokeapi.co/api/v2/pokemon-species/';\n\nconst fetchPokeSpecies = pokeId => {\n\treturn fetch(`${pokeSpeciesURL}${pokeId}`).then(response => response.json());\n};\n\nexport { fetchPokeList, fetchPokeDetail, fetchPokeSpecies };\n","import React from 'react';\nimport HomePage from '../HomePage';\nimport PokemonDetailPage from '../PokemonDetailPage';\nimport { Route, Switch } from 'react-router-dom';\n\nimport {\n\tfetchPokeList,\n\tfetchPokeDetail,\n\tfetchPokeSpecies\n} from '../../services/API-call';\n\nimport './styles.scss';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\tpokemonsData: [],\n\t\t\t\tisFetching: true\n\t\t\t},\n\t\t\tfilters: {\n\t\t\t\tnameValue: ''\n\t\t\t}\n\t\t};\n\n\t\tthis.handlerInputName = this.handlerInputName.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\t//First fetch\n\t\tfetchPokeList().then(data => {\n\t\t\tconst pokeListUrls = data.results;\n\n\t\t\tconst pokePromisesArr = pokeListUrls.map(pokemon => {\n\t\t\t\tlet thisPokemonInfo = {};\n\n\t\t\t\t//Second fetch.\n\t\t\t\treturn fetchPokeDetail(pokemon.url)\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tthisPokemonInfo = response;\n\n\t\t\t\t\t\t//Third fetch.\n\t\t\t\t\t\treturn fetchPokeSpecies(response.id);\n\t\t\t\t\t})\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tconst pokeHasEvolution = response.evolves_from_species;\n\n\t\t\t\t\t\treturn (thisPokemonInfo = {\n\t\t\t\t\t\t\t...thisPokemonInfo,\n\t\t\t\t\t\t\t//Add new key and value\n\t\t\t\t\t\t\tevolvesFrom: pokeHasEvolution ? pokeHasEvolution.name : ''\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tPromise.all(pokePromisesArr).then(responses => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tpokemonsData: responses.sort((a, b) => a.id - b.id),\n\t\t\t\t\t\tisFetching: false\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\thandlerInputName(e) {\n\t\tconst { currentTarget } = e;\n\t\tlet { value } = currentTarget;\n\t\t// Using prevState in case having more filters in the future\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t...prevState.filters,\n\t\t\t\t\tnameValue: value\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { pokemonsData, isFetching } = this.state.data;\n\t\tconst { nameValue } = this.state.filters;\n\t\treturn (\n\t\t\t<Switch>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath=\"/\"\n\t\t\t\t\trender={() => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<HomePage\n\t\t\t\t\t\t\t\tisFetching={isFetching}\n\t\t\t\t\t\t\t\tpokemonsData={pokemonsData}\n\t\t\t\t\t\t\t\thandlerInputName={this.handlerInputName}\n\t\t\t\t\t\t\t\tnameValue={nameValue}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/pokemon-detail/:pokemonId\"\n\t\t\t\t\trender={routerProps => (\n\t\t\t\t\t\t<PokemonDetailPage\n\t\t\t\t\t\t\tisFetching={isFetching}\n\t\t\t\t\t\t\tmatch={routerProps.match}\n\t\t\t\t\t\t\tpokemonsData={pokemonsData}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<App />\n\t</HashRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}